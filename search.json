[{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Serdar Balci. Author, maintainer.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balci S (2025). ClinicoPathDescriptives: Descriptive Analysis Tools Clinicopathological Research. R package version 0.0.3.70, https://github.com/sbalci/ClinicoPathJamoviModule/.","code":"@Manual{,   title = {ClinicoPathDescriptives: Descriptive Analysis Tools for Clinicopathological Research},   author = {Serdar Balci},   year = {2025},   note = {R package version 0.0.3.70},   url = {https://github.com/sbalci/ClinicoPathJamoviModule/}, }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/index.html","id":"clinicopathdescriptives","dir":"","previous_headings":"","what":"Descriptive Analysis Tools for Clinicopathological Research","title":"Descriptive Analysis Tools for Clinicopathological Research","text":"ClinicoPath jamovi module Descriptives See https://sbalci.github.io/ClinicoPathJamoviModule/","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ClinicoPathDescriptives-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ClinicoPathDescriptives: Analysis for Clinicopathological Research — ClinicoPathDescriptives-package","title":"ClinicoPathDescriptives: Analysis for Clinicopathological Research — ClinicoPathDescriptives-package","text":"ClinicoPathDescriptives ClinicoPathDescriptives help researchers generate natural language summaries dataset, generate cross tables statistical tests, survival analysis survival tables, survival plots, natural language summaries. documentation, see ClinicoPathJamoviModule Website. also see ClinicoPathDescriptives Website.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ClinicoPathDescriptives-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ClinicoPathDescriptives: Analysis for Clinicopathological Research — ClinicoPathDescriptives-package","text":"ClinicoPathDescriptives","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ClinicoPathDescriptives-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ClinicoPathDescriptives: Analysis for Clinicopathological Research — ClinicoPathDescriptives-package","text":"Maintainer: Serdar Balci  (ORCID)","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramid.html","id":null,"dir":"Reference","previous_headings":"","what":"Age Pyramid — agepyramid","title":"Age Pyramid — agepyramid","text":"Age Pyramid","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Age Pyramid — agepyramid","text":"","code":"agepyramid(   data,   age,   gender,   female,   bin_width = 5,   plot_title = \"Age Pyramid\" )"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Age Pyramid — agepyramid","text":"data data data frame. age string naming variable data contains continuous values used report gender string naming variable data contains categorical values used report female string naming level gender contains level female bin_width width age bins years. Adjust change granularity age groups. plot_title title displayed age pyramid plot.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Age Pyramid — agepyramid","text":"results object containing: Tables can converted data frames asDF .data.frame. example: results$pyramidTable$asDF .data.frame(results$pyramidTable)","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramidClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Age Pyramid — agepyramidClass","title":"Age Pyramid — agepyramidClass","text":"Generates age pyramid plot provided data. function allows customization bin width (age group granularity) plot title. creates visually appealing plot showing distribution age gender.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramidClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Age Pyramid — agepyramidClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::agepyramidBase -> agepyramidClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramidClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Age Pyramid — agepyramidClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::agepyramidBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramidClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Age Pyramid — agepyramidClass","text":"agepyramidClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramidClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Age Pyramid — agepyramidClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramidClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Age Pyramid — agepyramidClass","text":"","code":"agepyramidClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramidClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Age Pyramid — agepyramidClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvial.html","id":null,"dir":"Reference","previous_headings":"","what":"Alluvial Diagrams — alluvial","title":"Alluvial Diagrams — alluvial","text":"Alluvial Diagrams","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alluvial Diagrams — alluvial","text":"","code":"alluvial(   data,   vars,   condensationvar,   excl = FALSE,   marg = FALSE,   fill = \"first_variable\",   bin = \"default\",   orient = \"vert\",   usetitle = FALSE,   mytitle = \"Alluvial Plot\" )"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alluvial Diagrams — alluvial","text":"data data data frame. vars string naming variables data contains values used Alluvial Diagram. condensationvar primary variable used condensation. excl Exclude missing values analysis. marg Include marginal plots. fill list argument fill selecting variable represented color. Default 'first_variable'. bin labels bins low high orient Orientation plot. Default 'vertical'. usetitle Use custom title plot. mytitle Title plot.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alluvial Diagrams — alluvial","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Alluvial Plot — alluvialClass","title":"Alluvial Plot — alluvialClass","text":"tool help form Alluvial Diagrams (Alluvial Plots).","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alluvial Plot — alluvialClass","text":"Alluvial Plot","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Alluvial Plot — alluvialClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::alluvialBase -> alluvialClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Alluvial Plot — alluvialClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::alluvialBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Alluvial Plot — alluvialClass","text":"alluvialClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Alluvial Plot — alluvialClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alluvial Plot — alluvialClass","text":"","code":"alluvialClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alluvial Plot — alluvialClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benford.html","id":null,"dir":"Reference","previous_headings":"","what":"Benford Analysis — benford","title":"Benford Analysis — benford","text":"Benford Analysis","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benford.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Benford Analysis — benford","text":"","code":"benford(data, var)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benford.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Benford Analysis — benford","text":"data data data frame. var string naming variable data contains continuous values used report","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benford.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Benford Analysis — benford","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benfordClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Benford's Law Analysis — benfordClass","title":"Benford's Law Analysis — benfordClass","text":"function performs Benford's Law analysis numeric variable. returns Benford's Law distribution list potential suspects.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benfordClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Benford's Law Analysis — benfordClass","text":"list Benford's Law distribution list potential suspects. list Benford's Law distribution list potential suspects.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benfordClass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Benford's Law Analysis — benfordClass","text":"Benford's Law analysis test determine distribution first digits numeric variable follows Benford's Law. Benford's Law distribution compared observed distribution first digits variable. analysis returns list potential suspects deviate significantly Benford's Law.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benfordClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Benford's Law Analysis — benfordClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::benfordBase -> benfordClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benfordClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Benford's Law Analysis — benfordClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::benfordBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benfordClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Benford's Law Analysis — benfordClass","text":"benfordClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benfordClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Benford's Law Analysis — benfordClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benfordClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Benford's Law Analysis — benfordClass","text":"","code":"benfordClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benfordClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Benford's Law Analysis — benfordClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/bootstrapIDI.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap IDI calculation with confidence intervals — bootstrapIDI","title":"Bootstrap IDI calculation with confidence intervals — bootstrapIDI","text":"Calculates Integrated Discrimination Improvement bootstrap confidence intervals","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/bootstrapIDI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap IDI calculation with confidence intervals — bootstrapIDI","text":"","code":"bootstrapIDI(   new_values,   ref_values,   actual,   direction = \">=\",   n_boot = 1000,   conf_level = 0.95 )"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/bootstrapIDI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap IDI calculation with confidence intervals — bootstrapIDI","text":"new_values Test values new test ref_values Test values reference test actual Binary outcome vector (0/1) direction Classification direction (\">=\" \"<=\") n_boot Number bootstrap iterations conf_level Confidence level (default 0.95)","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/bootstrapIDI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap IDI calculation with confidence intervals — bootstrapIDI","text":"List IDI, confidence intervals, p-value","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate AUC from sensitivity and specificity — calculate_auc","title":"Approximate AUC from sensitivity and specificity — calculate_auc","text":"Uses simplified formula approximate AUC sensitivity specificity","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_auc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate AUC from sensitivity and specificity — calculate_auc","text":"","code":"calculate_auc(sens, spec)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate AUC from sensitivity and specificity — calculate_auc","text":"sens Sensitivity test spec Specificity test","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_auc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate AUC from sensitivity and specificity — calculate_auc","text":"Numeric AUC value NA inputs valid","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_nlr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate negative likelihood ratio — calculate_nlr","title":"Calculate negative likelihood ratio — calculate_nlr","text":"Calculates negative likelihood ratio sensitivity specificity","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_nlr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate negative likelihood ratio — calculate_nlr","text":"","code":"calculate_nlr(sens, spec)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_nlr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate negative likelihood ratio — calculate_nlr","text":"sens Sensitivity value spec Specificity value","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_nlr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate negative likelihood ratio — calculate_nlr","text":"Numeric negative likelihood ratio NA inputs valid","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_npv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate negative predictive value (NPV) — calculate_npv","title":"Calculate negative predictive value (NPV) — calculate_npv","text":"Calculates NPV confusion matrix values","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_npv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate negative predictive value (NPV) — calculate_npv","text":"","code":"calculate_npv(tn, fn)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_npv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate negative predictive value (NPV) — calculate_npv","text":"tn Number true negatives fn Number false negatives","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_npv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate negative predictive value (NPV) — calculate_npv","text":"Numeric NPV value NA inputs valid","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_plr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate positive likelihood ratio — calculate_plr","title":"Calculate positive likelihood ratio — calculate_plr","text":"Calculates positive likelihood ratio sensitivity specificity","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_plr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate positive likelihood ratio — calculate_plr","text":"","code":"calculate_plr(sens, spec)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_plr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate positive likelihood ratio — calculate_plr","text":"sens Sensitivity value spec Specificity value","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_plr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate positive likelihood ratio — calculate_plr","text":"Numeric positive likelihood ratio NA inputs valid","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_ppv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate positive predictive value (PPV) — calculate_ppv","title":"Calculate positive predictive value (PPV) — calculate_ppv","text":"Calculates PPV confusion matrix values","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_ppv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate positive predictive value (PPV) — calculate_ppv","text":"","code":"calculate_ppv(tp, fp)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_ppv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate positive predictive value (PPV) — calculate_ppv","text":"tp Number true positives fp Number false positives","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_ppv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate positive predictive value (PPV) — calculate_ppv","text":"Numeric PPV value NA inputs valid","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate test sensitivity — calculate_sensitivity","title":"Calculate test sensitivity — calculate_sensitivity","text":"Calculates sensitivity (true positive rate) confusion matrix values","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate test sensitivity — calculate_sensitivity","text":"","code":"calculate_sensitivity(tp, fn)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate test sensitivity — calculate_sensitivity","text":"tp Number true positives fn Number false negatives","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_sensitivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate test sensitivity — calculate_sensitivity","text":"Numeric sensitivity value NA inputs valid","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_specificity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate test specificity — calculate_specificity","title":"Calculate test specificity — calculate_specificity","text":"Calculates specificity (true negative rate) confusion matrix values","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_specificity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate test specificity — calculate_specificity","text":"","code":"calculate_specificity(tn, fp)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_specificity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate test specificity — calculate_specificity","text":"tn Number true negatives fp Number false positives","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/calculate_specificity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate test specificity — calculate_specificity","text":"Numeric specificity value NA inputs valid","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/clinicopath_startup_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Package startup message — clinicopath_startup_message","title":"Package startup message — clinicopath_startup_message","text":"Displays information package author website","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/clinicopath_startup_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package startup message — clinicopath_startup_message","text":"","code":"clinicopath_startup_message()"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/clinicopath_startup_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package startup message — clinicopath_startup_message","text":"Invisible NULL (called side effects)","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstable.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross Tables — crosstable","title":"Cross Tables — crosstable","text":"Function making Cross Tables.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross Tables — crosstable","text":"","code":"crosstable(   data,   vars,   group,   sty = \"nejm\",   excl = FALSE,   cont = \"mean\",   pcat = \"chisq\" )"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross Tables — crosstable","text":"data data data frame. vars variable(s) appear rows cross table. group variable appear columns (groups) table. sty . excl Exclude rows missing values. cont . pcat .","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross Tables — crosstable","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross Tables — crosstable","text":"","code":"# \\donttest{ # Example usage: # dat <- as.data.frame(your_data) # ClinicoPathDescriptives::crosstable( #   data = dat, #   vars = vars(YourRowVariable), #   group = \"YourGroupingVariable\", #   sty = \"finalfit\", #   excl = TRUE, #   cont = \"mean\", #   pcat = \"chisq\", #   exportCSV = TRUE # ) # }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross Table for Clinicopathological Comparisons — crosstableClass","title":"Cross Table for Clinicopathological Comparisons — crosstableClass","text":"function generates cross tables comparing dependent variable (rows) grouping variable (columns) automatically selects hypothesis tests appropriate clinical research. output tables rendered various styles (e.g., arsenal, finalfit, gtsummary, NEJM, Lancet, hmisc) intended pathologists oncologists. addition visualizing associations, function now optionally provides exportable CSV version cross table.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross Table for Clinicopathological Comparisons — crosstableClass","text":"function produces HTML table output, requested, additional downloadable CSV export.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cross Table for Clinicopathological Comparisons — crosstableClass","text":"function cleans variable names applies original labels. builds formula based cleaned data performs appropriate statistical test (e.g. chi-square Fisher’s exact test). Detailed user guidance provided via HTML -messages.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Cross Table for Clinicopathological Comparisons — crosstableClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::crosstableBase -> crosstableClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Cross Table for Clinicopathological Comparisons — crosstableClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::crosstableBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Cross Table for Clinicopathological Comparisons — crosstableClass","text":"crosstableClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Cross Table for Clinicopathological Comparisons — crosstableClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross Table for Clinicopathological Comparisons — crosstableClass","text":"","code":"crosstableClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross Table for Clinicopathological Comparisons — crosstableClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/is_in_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if value is within valid range — is_in_range","title":"Check if value is within valid range — is_in_range","text":"Validates value within specified bounds","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/is_in_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if value is within valid range — is_in_range","text":"","code":"is_in_range(x, min_val, max_val, inclusive = TRUE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/is_in_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if value is within valid range — is_in_range","text":"x Value check min_val Minimum allowed value max_val Maximum allowed value inclusive Whether bounds inclusive","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/is_in_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if value is within valid range — is_in_range","text":"Logical indicating value within range","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/load_required_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Load required packages with error handling — load_required_package","title":"Load required packages with error handling — load_required_package","text":"Load required packages error handling","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/load_required_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load required packages with error handling — load_required_package","text":"","code":"load_required_package(package_name, install_if_missing = TRUE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/load_required_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load required packages with error handling — load_required_package","text":"package_name Character string package name install_if_missing Logical, whether install package missing","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/load_required_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load required packages with error handling — load_required_package","text":"Logical indicating success","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/na-coalescing.html","id":null,"dir":"Reference","previous_headings":"","what":"NA-coalescing operator — na-coalescing","title":"NA-coalescing operator — na-coalescing","text":"NA-coalescing operator","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/na-coalescing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NA-coalescing operator — na-coalescing","text":"","code":"lhs %|% rhs"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/not-in-alt.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative not-in operator — not-in-alt","title":"Alternative not-in operator — not-in-alt","text":"Alternative -operator","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/not-in-alt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative not-in operator — not-in-alt","text":"","code":"lhs %!in% rhs"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/not-in.html","id":null,"dir":"Reference","previous_headings":"","what":"Not-in operator — not-in","title":"Not-in operator — not-in","text":"-operator","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/not-in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Not-in operator — not-in","text":"","code":"lhs %notin% rhs"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/null-coalescing.html","id":null,"dir":"Reference","previous_headings":"","what":"Null-coalescing operator — null-coalescing","title":"Null-coalescing operator — null-coalescing","text":"Null-coalescing operator","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/null-coalescing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Null-coalescing operator — null-coalescing","text":"","code":"lhs %||% rhs"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"Pipe operator","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/print.sensSpecTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Print formatted HTML table for sensitivity/specificity results — print.sensSpecTable","title":"Print formatted HTML table for sensitivity/specificity results — print.sensSpecTable","text":"Creates HTML table confusion matrix visualization","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/print.sensSpecTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print formatted HTML table for sensitivity/specificity results — print.sensSpecTable","text":"","code":"# S3 method for class 'sensSpecTable' print(Title, TP, FP, TN, FN)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/print.sensSpecTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print formatted HTML table for sensitivity/specificity results — print.sensSpecTable","text":"Title Title confusion matrix table TP Number true positives FP Number false positives TN Number true negatives FN Number false negatives","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/print.sensSpecTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print formatted HTML table for sensitivity/specificity results — print.sensSpecTable","text":"HTML string containing formatted table","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/prop_to_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert proportion to percentage string — prop_to_percent","title":"Convert proportion to percentage string — prop_to_percent","text":"Converts numeric proportion formatted percentage","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/prop_to_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert proportion to percentage string — prop_to_percent","text":"","code":"prop_to_percent(x, digits = 1)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/prop_to_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert proportion to percentage string — prop_to_percent","text":"x Numeric proportion (0-1) digits Number decimal places","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/prop_to_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert proportion to percentage string — prop_to_percent","text":"Character string percentage formatting","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/raw_to_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert raw test values to predicted probabilities using ROC curve — raw_to_prob","title":"Convert raw test values to predicted probabilities using ROC curve — raw_to_prob","text":"Maps raw test values probabilities based position ROC curve","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/raw_to_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert raw test values to predicted probabilities using ROC curve — raw_to_prob","text":"","code":"raw_to_prob(values, actual, direction = \">=\")"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/raw_to_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert raw test values to predicted probabilities using ROC curve — raw_to_prob","text":"values Raw test values actual Binary outcomes (0/1) direction Direction test (\">=\" \"<=\")","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/raw_to_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert raw test values to predicted probabilities using ROC curve — raw_to_prob","text":"Vector predicted probabilities","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcat.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of Categorical Variables — reportcat","title":"Summary of Categorical Variables — reportcat","text":"Generates detailed summary categorical variables including counts, percentages, missing value information. output presented textual visual formats, making easy interpret distribution data.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of Categorical Variables — reportcat","text":"","code":"reportcat(data, vars)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of Categorical Variables — reportcat","text":"data data data frame. vars Select variables data frame wish summarize. categorical variables (nominal, ordinal, factors) allowed.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of Categorical Variables — reportcat","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of Categorical Variables — reportcat","text":"","code":"# \\donttest{ # Example usage: # 1. Load your data into a data frame. # 2. Select the categorical variables to summarize. # 3. Run the reportcat module to view the summary. # # The module will produce a styled textual report along with a visual summary table. # }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of Categorical Variables — reportcatClass","title":"Summary of Categorical Variables — reportcatClass","text":"Summary Categorical Variables Summary Categorical Variables","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of Categorical Variables — reportcatClass","text":"Text","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Summary of Categorical Variables — reportcatClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::reportcatBase -> reportcatClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Summary of Categorical Variables — reportcatClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::reportcatBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Summary of Categorical Variables — reportcatClass","text":"reportcatClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Summary of Categorical Variables — reportcatClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of Categorical Variables — reportcatClass","text":"","code":"reportcatClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of Categorical Variables — reportcatClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/safe_divide.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe division function — safe_divide","title":"Safe division function — safe_divide","text":"Performs division safe handling division zero","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/safe_divide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe division function — safe_divide","text":"","code":"safe_divide(x, y, na_value = NA_real_)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/safe_divide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe division function — safe_divide","text":"x Numerator y Denominator na_value Value return division zero occurs","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/safe_divide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safe division function — safe_divide","text":"Result x/y na_value y zero","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydata.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of Continuous Variables — summarydata","title":"Summary of Continuous Variables — summarydata","text":"module generates descriptive statistics continuous variables. provides textual summary visually appealing summary table. Optionally, can enable distribution diagnostics examine normality, skewness, kurtosis.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of Continuous Variables — summarydata","text":"","code":"summarydata(data, vars, distr = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of Continuous Variables — summarydata","text":"data data data frame. vars string naming variables data contains continuous values used report distr TRUE, additional distribution diagnostics (Shapiro-Wilk test, skewness, kurtosis) computed explained.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of Continuous Variables — summarydata","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of Continuous Variables — summarydata","text":"","code":"# \\donttest{ # Example: # 1. Load your data frame. # 2. Select one or more continuous variables. # 3. (Optional) Enable Distribution Diagnostics to view additional tests. # 4. Run the summarydata module to see descriptive statistics and distribution characteristics. # }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of Continuous Variables with Distribution Diagnostics — summarydataClass","title":"Summary of Continuous Variables with Distribution Diagnostics — summarydataClass","text":"Summary Continuous Variables Distribution Diagnostics Summary Continuous Variables Distribution Diagnostics","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of Continuous Variables with Distribution Diagnostics — summarydataClass","text":"Text HTML summary table (optional distribution diagnostics)","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Summary of Continuous Variables with Distribution Diagnostics — summarydataClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::summarydataBase -> summarydataClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Summary of Continuous Variables with Distribution Diagnostics — summarydataClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::summarydataBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Summary of Continuous Variables with Distribution Diagnostics — summarydataClass","text":"summarydataClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Summary of Continuous Variables with Distribution Diagnostics — summarydataClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of Continuous Variables with Distribution Diagnostics — summarydataClass","text":"","code":"summarydataClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of Continuous Variables with Distribution Diagnostics — summarydataClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/swimmerplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Swimmer Plot — swimmerplot","title":"Swimmer Plot — swimmerplot","text":"Creates swimmer plot visualize individual patient timelines clinical events.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/swimmerplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swimmer Plot — swimmerplot","text":"","code":"swimmerplot(   data,   patientID,   start,   end,   event,   timetype = \"raw\",   timetypedata = \"ymd\",   timetypeoutput = \"months\",   startType = \"relative\",   sortVariable,   barHeight = 3,   referenceLines = \"none\",   customReferenceTime = 12,   useggswim = FALSE,   markerSize = 5 )"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/swimmerplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swimmer Plot — swimmerplot","text":"data data data frame. patientID Variable containing patient identifiers. start Time/date observation/treatment started. end Time/date observation/treatment ended. event Optional variable event types (e.g., CR, PR, PD). timetype Select whether time values raw numbers dates timetypedata Select time format data timetypeoutput Select time unit display startType Choose whether align start times 0 use absolute start times sortVariable Variable sort patient timelines. barHeight Thickness timeline bars referenceLines Add reference time lines plot customReferenceTime Custom time point mark reference line useggswim . markerSize Size event markers plot","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/swimmerplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swimmer Plot — swimmerplot","text":"results object containing: Tables can converted data frames asDF .data.frame. example: results$summary$asDF .data.frame(results$summary)","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/swimmerplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swimmer Plot — swimmerplot","text":"","code":"# \\donttest{ # Example will show patient timelines data <- data.frame(     PatientID = paste0(\"PT\", 1:10),     StartTime = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0),     EndTime = c(12, 8, 15, 6, 9, 11, 7, 14, 10, 5),     Event = c(\"CR\", \"PD\", \"PR\", \"SD\", \"CR\", \"PD\", \"PR\", \"SD\", \"CR\", \"PD\"),     Surgery = c(1, 2, 3, 1, 2, 3, 1, 2, 3, 1) ) swimmerplot(     data = data,     patientID = \"PatientID\",     start = \"StartTime\",     end = \"EndTime\",     event = \"Event\",     milestone1Name = \"Surgery\",     milestone1Date = \"Surgery\" ) #> Error in swimmerplot(data = data, patientID = \"PatientID\", start = \"StartTime\",     end = \"EndTime\", event = \"Event\", milestone1Name = \"Surgery\",     milestone1Date = \"Surgery\"): unused arguments (milestone1Name = \"Surgery\", milestone1Date = \"Surgery\") # }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/swimmerplotClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Swimmer Plot — swimmerplotClass","title":"Swimmer Plot — swimmerplotClass","text":"Creates swimmer plots visualizing patient timelines, treatments, clinical events","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/swimmerplotClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Swimmer Plot — swimmerplotClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::swimmerplotBase -> swimmerplotClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/swimmerplotClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Swimmer Plot — swimmerplotClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::swimmerplotBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/swimmerplotClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Swimmer Plot — swimmerplotClass","text":"swimmerplotClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/swimmerplotClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Swimmer Plot — swimmerplotClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/swimmerplotClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swimmer Plot — swimmerplotClass","text":"","code":"swimmerplotClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/swimmerplotClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swimmer Plot — swimmerplotClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone.html","id":null,"dir":"Reference","previous_headings":"","what":"Table One — tableone","title":"Table One — tableone","text":"function generates \"Table One\", descriptive summary table frequently used  clinicopathological research manuscripts. supports multiple output styles flexible formatting.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table One — tableone","text":"","code":"tableone(data, vars, sty = \"t1\", excl = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table One — tableone","text":"data input data data frame. vars set variable names data include Table One. Supports numeric, ordinal, categorical variables. sty Specify output style table. option uses different package formatting. excl Boolean option exclude missing values (NA) analysis. Note: Exclusion may remove entire cases.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table One — tableone","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table One — tableone","text":"","code":"# \\donttest{ # Example usage: # data('histopathology') # dat <- as.data.frame(histopathology) # ClinicoPathDescriptives::tableone( #   data = dat, #   vars = vars(Sex, PreinvasiveComponent, LVI, PNI, Grade, Age), #   sty = \"t3\", #   excl = TRUE) # }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone2.html","id":null,"dir":"Reference","previous_headings":"","what":"Table One Draft 2 — tableone2","title":"Table One Draft 2 — tableone2","text":"function generates \"Table One\", descriptive summary table frequently used  clinicopathological research manuscripts. supports multiple output styles flexible formatting.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table One Draft 2 — tableone2","text":"","code":"tableone2(   data,   vars,   sty = \"t1\",   excl = FALSE,   pivot_format = \"clinical\",   include_statistics = TRUE,   group_var,   group_comparisons = FALSE )"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table One Draft 2 — tableone2","text":"data input data data frame. vars set variable names data include Table One. Supports numeric, ordinal, categorical variables. sty Specify output style table. option uses different package formatting. excl Boolean option exclude missing values (NA) analysis. Note: Exclusion may remove entire cases. pivot_format Formatting style pivottabler enhanced tables. include_statistics Include advanced statistical summaries pivot format. group_var Variable use group comparisons analysis. group_comparisons Enable group comparison features pivot table.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table One Draft 2 — tableone2","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table One Draft 2 — tableone2","text":"","code":"# \\donttest{ # Example usage: # data('histopathology') # dat <- as.data.frame(histopathology) # ClinicoPath::tableone2( #   data = dat, #   vars = vars(Sex, PreinvasiveComponent, LVI, PNI, Grade, Age), #   sty = \"t3\", #   excl = TRUE) # }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone2Class.html","id":null,"dir":"Reference","previous_headings":"","what":"Table One — tableone2Class","title":"Table One — tableone2Class","text":"function creates “Table One” – descriptive summary table commonly used clinicopathological research. offers several output styles using different packages (tableone, gtsummary, arsenal, janitor).","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone2Class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table One — tableone2Class","text":"formatted table according chosen style.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone2Class.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Table One — tableone2Class","text":"jmvcore::Analysis -> ClinicoPathDescriptives::tableone2Base -> tableone2Class","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone2Class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Table One — tableone2Class","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::tableone2Base$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone2Class.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Table One — tableone2Class","text":"tableone2Class$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone2Class.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Table One — tableone2Class","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone2Class.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table One — tableone2Class","text":"","code":"tableone2Class$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone2Class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table One — tableone2Class","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Table One — tableoneClass","title":"Table One — tableoneClass","text":"function creates “Table One” – descriptive summary table commonly used clinicopathological research. offers several output styles using different packages (tableone, gtsummary, arsenal, janitor).","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table One — tableoneClass","text":"formatted table according chosen style.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Table One — tableoneClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::tableoneBase -> tableoneClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Table One — tableoneClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::tableoneBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Table One — tableoneClass","text":"tableoneClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Table One — tableoneClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table One — tableoneClass","text":"","code":"tableoneClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table One — tableoneClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/validateROCInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate inputs for ROC analysis — validateROCInputs","title":"Validate inputs for ROC analysis — validateROCInputs","text":"Comprehensive validation ROC analysis inputs","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/validateROCInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate inputs for ROC analysis — validateROCInputs","text":"","code":"validateROCInputs(x, class_var, pos_class = NULL)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/validateROCInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate inputs for ROC analysis — validateROCInputs","text":"x Test values class_var Classification labels pos_class Positive class label","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/validateROCInputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate inputs for ROC analysis — validateROCInputs","text":"List validation results cleaned data","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartree.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable Tree — vartree","title":"Variable Tree — vartree","text":"Enhanced function generating comprehensive tree summaries variables. Supports current CRAN vtree package advanced styling, statistical summaries, interpretation features. Consolidates functionality legacy versions modern vtree capabilities.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable Tree — vartree","text":"","code":"vartree(   data,   vars,   percvar,   percvarLevel,   summaryvar,   summarylocation = \"leafonly\",   style = \"default\",   prunebelow,   pruneLevel1,   pruneLevel2,   follow,   followLevel1,   followLevel2,   excl = FALSE,   vp = TRUE,   horizontal = FALSE,   sline = TRUE,   varnames = FALSE,   nodelabel = TRUE,   pct = FALSE,   showcount = TRUE,   legend = FALSE,   pattern = FALSE,   sequence = FALSE,   ptable = FALSE,   mytitle = \"\",   useprunesmaller = FALSE,   prunesmaller = 5,   showInterpretation = TRUE )"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable Tree — vartree","text":"data data data frame. vars Categorical variables tree construction. percvar Variable percentage calculations. percvarLevel Specific level percentage calculations. summaryvar Continuous variable statistical summaries (mean, SD) tree nodes. summarylocation display statistical summaries tree. style Visual style preset: default (colored), clean (minimal colors),  minimal (simplified layout). prunebelow Variable conditional pruning tree branches. pruneLevel1 First level pruning condition. pruneLevel2 Second level pruning condition. follow Variable conditional following tree branches. followLevel1 First level follow condition. followLevel2 Second level follow condition. excl Exclude rows missing values analysis. vp Calculate percentages based valid (non-missing) values. horizontal Display tree horizontal orientation. sline Display variable names values line. varnames Show variable names tree nodes. nodelabel Show labels tree nodes. pct Display percentages tree nodes. showcount Display counts tree nodes. legend Show legend tree visualization. pattern Generate pattern-based tree analysis. sequence Generate sequence-based tree analysis. ptable Display pattern table alongside tree. mytitle Custom title tree root. useprunesmaller Enable pruning nodes small counts. prunesmaller Minimum count threshold node pruning. showInterpretation Generate display automatic interpretation tree results.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variable Tree — vartree","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variable Tree — vartree","text":"","code":"# \\donttest{ # Basic variable tree vartree(     data = mydata,     vars = c(\"var1\", \"var2\", \"var3\"),     style = \"default\",     showInterpretation = TRUE ) #> Error: object 'mydata' not found  # Enhanced tree with statistical summaries vartree(     data = mydata,     vars = c(\"treatment\", \"response\"),     summaryvar = \"age\",     summarylocation = \"allnodes\",     style = \"clean\",     showInterpretation = TRUE ) #> Error: object 'mydata' not found # }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartreeClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable Tree — vartreeClass","title":"Variable Tree — vartreeClass","text":"Variable Tree Variable Tree","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartreeClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Variable Tree — vartreeClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::vartreeBase -> vartreeClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartreeClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Variable Tree — vartreeClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::vartreeBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartreeClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Variable Tree — vartreeClass","text":"vartreeClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartreeClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Variable Tree — vartreeClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartreeClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable Tree — vartreeClass","text":"","code":"vartreeClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartreeClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable Tree — vartreeClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/venn.html","id":null,"dir":"Reference","previous_headings":"","what":"Venn Diagram — venn","title":"Venn Diagram — venn","text":"Venn Diagram","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/venn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Venn Diagram — venn","text":"","code":"venn(   data,   var1,   var1true,   var2,   var2true,   var3,   var3true,   var4,   var4true,   upsetType = \"upsetR\",   sortBy = \"freq\",   minSize = 0,   showAnnotations = FALSE )"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/venn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Venn Diagram — venn","text":"data dataset data frame containing variables analysis. var1 string naming primary variable data diagram. var1true level var1 represents positive condition. var2 string naming secondary variable data used diagram. var2true level var2 represents positive condition. var3 optional variable data include diagram. var3true level var3 represents positive condition. var4 optional variable data additional overlap analysis. var4true level var4 represents positive condition. upsetType Choose UpSetR (classic) ComplexUpset (advanced features). sortBy sort intersections UpSet plot. minSize Minimum size intersections display. showAnnotations Add statistical annotations ComplexUpset plot.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/venn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Venn Diagram — venn","text":"results object containing: Tables can converted data frames asDF .data.frame. example: results$summary$asDF .data.frame(results$summary)","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Venn Diagram — vennClass","title":"Venn Diagram — vennClass","text":"Generates Venn Diagram Upset diagram selected categorical variables. function converts specified variables logical values based chosen \"true\" level. Two visual outputs produced: Venn diagram (via ggvenn) Upset plot (via UpSetR ComplexUpset). Additionally, summary table \"true\" counts variable provided. ComplexUpset features include advanced styling, statistical annotations, custom sorting, enhanced theming options publication-ready figures.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Venn Diagram — vennClass","text":"function produces Venn diagram Upset diagram.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Venn Diagram — vennClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::vennBase -> vennClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Venn Diagram — vennClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::vennBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Venn Diagram — vennClass","text":"vennClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Venn Diagram — vennClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Venn Diagram — vennClass","text":"","code":"vennClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Venn Diagram — vennClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Venn Diagram — vennClass","text":"","code":"if (FALSE) { # \\dontrun{ # Example 1: Basic 2-variable Venn diagram data(\"mtcars\") mtcars$vs <- factor(mtcars$vs, levels = c(0, 1), labels = c(\"V-shaped\", \"Straight\")) mtcars$am <- factor(mtcars$am, levels = c(0, 1), labels = c(\"Automatic\", \"Manual\"))  # Create Venn diagram showing overlap between V-shaped engines and Manual transmission venn(data = mtcars, var1 = \"vs\", var1true = \"V-shaped\",       var2 = \"am\", var2true = \"Manual\")  # Example 2: 3-variable Venn diagram with penguins data library(palmerpenguins) data(\"penguins\") penguins$large_bill <- factor(ifelse(penguins$bill_length_mm > 45, \"Large\", \"Small\")) penguins$heavy_weight <- factor(ifelse(penguins$body_mass_g > 4000, \"Heavy\", \"Light\")) penguins$adelie_species <- factor(ifelse(penguins$species == \"Adelie\", \"Adelie\", \"Other\"))  venn(data = penguins,       var1 = \"large_bill\", var1true = \"Large\",      var2 = \"heavy_weight\", var2true = \"Heavy\",       var3 = \"adelie_species\", var3true = \"Adelie\")  # Example 3: Medical/Clinical example # Create sample clinical data clinical_data <- data.frame(   patient_id = 1:100,   diabetes = sample(c(\"Yes\", \"No\"), 100, replace = TRUE, prob = c(0.3, 0.7)),   hypertension = sample(c(\"Yes\", \"No\"), 100, replace = TRUE, prob = c(0.4, 0.6)),   obesity = sample(c(\"Yes\", \"No\"), 100, replace = TRUE, prob = c(0.25, 0.75)) )  # Analyze comorbidity patterns venn(data = clinical_data,      var1 = \"diabetes\", var1true = \"Yes\",      var2 = \"hypertension\", var2true = \"Yes\",      var3 = \"obesity\", var3true = \"Yes\")  # Example 4: Using ComplexUpset for advanced features venn(data = clinical_data,      var1 = \"diabetes\", var1true = \"Yes\",      var2 = \"hypertension\", var2true = \"Yes\",      var3 = \"obesity\", var3true = \"Yes\",      upsetType = \"complexUpset\",      sortBy = \"freq\",      minSize = 5,      showAnnotations = TRUE) } # }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfall.html","id":null,"dir":"Reference","previous_headings":"","what":"Treatment Response Analysis — waterfall","title":"Treatment Response Analysis — waterfall","text":"Creates waterfall spider plots analyze tumor response data following RECIST criteria. Supports raw tumor measurements pre-calculated percentage changes. Provides comprehensive response analysis including ORR, DCR, person-time metrics.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Treatment Response Analysis — waterfall","text":"","code":"waterfall(   data,   patientID,   responseVar,   timeVar = NULL,   inputType = \"percentage\",   sortBy = \"response\",   showThresholds = FALSE,   labelOutliers = FALSE,   showMedian = FALSE,   showCI = FALSE,   minResponseForLabel = 50,   colorScheme = \"jamovi\",   barAlpha = 1,   barWidth = 0.7,   showWaterfallPlot = TRUE,   showSpiderPlot = TRUE )"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Treatment Response Analysis — waterfall","text":"data data data frame. patientID Variable containing patient identifiers. responseVar Response variable: either raw tumor measurements pre-calculated percentage changes. raw measurements, requires time variable baseline (time = 0). percentages, negative values indicate tumor shrinkage (improvement). timeVar Time point measurement spider plot (e.g., months baseline) inputType Specify data format: 'raw' actual measurements (calculate percent change) 'percentage' pre-calculated percentage changes sortBy Sort waterfall plot best response patient ID. showThresholds Show +20 percent -30 percent RECIST thresholds. labelOutliers Label responses exceeding specified threshold. showMedian Show median response horizontal line. showCI Show confidence interval around median response. minResponseForLabel Minimum response value labels displayed. colorScheme Color scheme waterfall plot. barAlpha Transparency bars waterfall plot. barWidth Width bars waterfall plot. showWaterfallPlot Display waterfall plot showing best response patient. showSpiderPlot Display spider plot showing response trajectories time (requires time variable).","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Treatment Response Analysis — waterfall","text":"results object containing: Tables can converted data frames asDF .data.frame. example: results$summaryTable$asDF .data.frame(results$summaryTable)","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Treatment Response Analysis — waterfall","text":"","code":"# \\donttest{ # Example 1: Percentage data data_pct <- data.frame(     PatientID = paste0(\"PT\", 1:5),     Response = c(-60, -35, -10, 15, 45) ) waterfall(     data = data_pct,     patientID = \"PatientID\",     responseVar = \"Response\",     inputType = \"percentage\" ) #>  #>  TREATMENT RESPONSE ANALYSIS #>  #>  Response Categories Based on RECIST v1.1 Criteria  #>  ─────────────────────────────────────────────────  #>    Category    Number of Patients    Percentage    #>  ─────────────────────────────────────────────────  #>    CR     ᵃ                     0            0%    #>    PR     ᵇ                     2           40%    #>    SD     ᵈ                     2           40%    #>    PD     ᵉ                     1           20%    #>  ─────────────────────────────────────────────────  #>    ᵃ Complete Response (CR): Complete #>    disappearance of all target lesions. #>    ᵇ Partial Response (PR): At least 30% #>    decrease in sum of target lesions. #>    ᵈ Stable Disease (SD): Neither PR nor PD #>    criteria met. #>    ᵉ Progressive Disease (PD): At least 20% #>    increase in sum of target lesions. #>  #>  #>  Person-Time Analysis                                                                                                    #>  ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────  #>    Response Category    Patients    % Patients    Person-Time    % Time    Median Time to Response    Median Duration    #>  ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────  #>  ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────  #>  #>  #>  Clinical Response Metrics                     #>  ────────────────────────────────────────────  #>    Metric                             Value    #>  ────────────────────────────────────────────  #>    Objective Response Rate (CR+PR)    40%      #>    Disease Control Rate (CR+PR+SD)    80%      #>  ────────────────────────────────────────────  #>     # Example 2: Raw measurements data_raw <- data.frame(     PatientID = rep(paste0(\"PT\", 1:3), each = 3),     Time = rep(c(0, 2, 4), 3),     Measurement = c(50, 30, 25, 60, 45, 40, 55, 50, 48) ) waterfall(     data = data_raw,     patientID = \"PatientID\",     responseVar = \"Measurement\",     timeVar = \"Time\",     inputType = \"raw\" ) #> Error in !rlang::sym(responseVar): invalid argument type # }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Treatment Response Analysis — waterfallClass","title":"Treatment Response Analysis — waterfallClass","text":"Creates waterfall spider plots visualize tumor response data following RECIST criteria. Supports raw tumor measurements pre-calculated percentage changes.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Treatment Response Analysis — waterfallClass","text":"Waterfall spider plots response analysis tables","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Treatment Response Analysis — waterfallClass","text":"function handles two data formats: Percentage Data: Pre-calculated percentage changes baseline Negative values indicate tumor shrinkage (improvement) Example: -30 means 30% decrease baseline Raw Measurements: Actual tumor measurements time Requires baseline measurement time = 0 Function calculates percentage changes automatically Uses ((current - baseline) / baseline) * 100 formula RECIST Categories: Complete Response (CR): ≤ -100% (complete disappearance) Partial Response (PR): ≤ -30% decrease Stable Disease (SD): -30% +20% change Progressive Disease (PD): > +20% increase","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Treatment Response Analysis — waterfallClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::waterfallBase -> waterfallClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Treatment Response Analysis — waterfallClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::waterfallBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Treatment Response Analysis — waterfallClass","text":"waterfallClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Treatment Response Analysis — waterfallClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Treatment Response Analysis — waterfallClass","text":"","code":"waterfallClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Treatment Response Analysis — waterfallClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Treatment Response Analysis — waterfallClass","text":"","code":"# Percentage data example data_pct <- data.frame(   PatientID = paste0(\"PT\", 1:5),   Response = c(-60, -35, -10, 15, 45) )  # Raw measurements example   data_raw <- data.frame(   PatientID = rep(paste0(\"PT\", 1:3), each = 3),   Time = rep(c(0, 2, 4), 3),   Measurement = c(50, 30, 25, 60, 45, 40, 55, 50, 48) )"}]
