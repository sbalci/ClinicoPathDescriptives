[{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Serdar Balci. Author, maintainer.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balci S (2025). ClinicoPathDescriptives: Descriptive Analysis Tools Clinicopathological Research. R package version 0.0.2.53, https://github.com/sbalci/ClinicoPathDescriptives/, https://sbalci.github.io/ClinicoPathJamoviModule/, https://www.serdarbalci.com/ClinicoPathDescriptives/, https://github.com/sbalci/ClinicoPathJamoviModule/.","code":"@Manual{,   title = {ClinicoPathDescriptives: Descriptive Analysis Tools for Clinicopathological Research},   author = {Serdar Balci},   year = {2025},   note = {R package version 0.0.2.53, https://github.com/sbalci/ClinicoPathDescriptives/, https://sbalci.github.io/ClinicoPathJamoviModule/, https://www.serdarbalci.com/ClinicoPathDescriptives/},   url = {https://github.com/sbalci/ClinicoPathJamoviModule/}, }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/index.html","id":"clinicopathdescriptives","dir":"","previous_headings":"","what":"Descriptive Analysis Tools for Clinicopathological Research","title":"Descriptive Analysis Tools for Clinicopathological Research","text":"ClinicoPath jamovi module Descriptives See https://sbalci.github.io/ClinicoPathJamoviModule/","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ClinicoPathDescriptives-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ClinicoPathDescriptives: Analysis for Clinicopathological Research — ClinicoPathDescriptives-package","title":"ClinicoPathDescriptives: Analysis for Clinicopathological Research — ClinicoPathDescriptives-package","text":"ClinicoPathDescriptives ClinicoPathDescriptives help researchers generate natural language summaries dataset, generate cross tables statistical tests, survival analysis survival tables, survival plots, natural language summaries. documentation, see ClinicoPathJamoviModule Website. also see ClinicoPathDescriptives Website.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ClinicoPathDescriptives-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ClinicoPathDescriptives: Analysis for Clinicopathological Research — ClinicoPathDescriptives-package","text":"ClinicoPathDescriptives","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ClinicoPathDescriptives-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ClinicoPathDescriptives: Analysis for Clinicopathological Research — ClinicoPathDescriptives-package","text":"Maintainer: Serdar Balci drserdarbalci@gmail.com (ORCID)","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramid.html","id":null,"dir":"Reference","previous_headings":"","what":"Age Pyramid — agepyramid","title":"Age Pyramid — agepyramid","text":"Age Pyramid","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Age Pyramid — agepyramid","text":"","code":"agepyramid(data, age, gender, female)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Age Pyramid — agepyramid","text":"data data data frame. age string naming variable data contains continuous values used report gender string naming variable data contains categorical values used report female string naming level gender contains level female","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Age Pyramid — agepyramid","text":"results object containing: Tables can converted data frames asDF .data.frame. example: results$pyramidTable$asDF .data.frame(results$pyramidTable)","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramidClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Age Pyramid — agepyramidClass","title":"Age Pyramid — agepyramidClass","text":"Age Pyramid Age Pyramid","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramidClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Age Pyramid — agepyramidClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::agepyramidBase -> agepyramidClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramidClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Age Pyramid — agepyramidClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::agepyramidBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramidClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Age Pyramid — agepyramidClass","text":"agepyramidClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramidClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Age Pyramid — agepyramidClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramidClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Age Pyramid — agepyramidClass","text":"","code":"agepyramidClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/agepyramidClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Age Pyramid — agepyramidClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvial.html","id":null,"dir":"Reference","previous_headings":"","what":"Alluvial Diagrams — alluvial","title":"Alluvial Diagrams — alluvial","text":"Alluvial Diagrams","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alluvial Diagrams — alluvial","text":"","code":"alluvial(   data,   vars,   condensationvar,   excl = FALSE,   marg = FALSE,   fill = \"first_variable\",   bin = \"default\",   orient = \"vert\",   usetitle = FALSE,   mytitle = \"Alluvial Plot\" )"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alluvial Diagrams — alluvial","text":"data data data frame. vars string naming variables data contains values used Alluvial Diagram. condensationvar primary variable used condensation. excl Exclude missing values analysis. marg Include marginal plots. fill list argument fill selecting variable represented color. Default 'first_variable'. bin labels bins low high orient Orientation plot. Default 'vertical'. usetitle Use custom title plot. mytitle Title plot.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alluvial Diagrams — alluvial","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Alluvial Plot — alluvialClass","title":"Alluvial Plot — alluvialClass","text":"Alluvial Plot Alluvial Plot","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alluvial Plot — alluvialClass","text":"Alluvial Plot","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Alluvial Plot — alluvialClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::alluvialBase -> alluvialClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Alluvial Plot — alluvialClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::alluvialBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Alluvial Plot — alluvialClass","text":"alluvialClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Alluvial Plot — alluvialClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alluvial Plot — alluvialClass","text":"","code":"alluvialClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/alluvialClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alluvial Plot — alluvialClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benford.html","id":null,"dir":"Reference","previous_headings":"","what":"Benford Analysis — benford","title":"Benford Analysis — benford","text":"Benford Analysis","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benford.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Benford Analysis — benford","text":"","code":"benford(data, var)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benford.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Benford Analysis — benford","text":"data data data frame. var string naming variable data contains continuous values used report","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/benford.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Benford Analysis — benford","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstable.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross Tables — crosstable","title":"Cross Tables — crosstable","text":"Function making Cross Tables.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross Tables — crosstable","text":"","code":"crosstable(   data,   vars,   group,   sty = \"nejm\",   excl = FALSE,   cont = \"mean\",   pcat = \"chisq\" )"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross Tables — crosstable","text":"data data data frame. vars variable rows group variable column sty . excl . cont . pcat .","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross Tables — crosstable","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross Tables — crosstable","text":"","code":"# \\donttest{ # example will be added # }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross Table — crosstableClass","title":"Cross Table — crosstableClass","text":"Cross Table Cross Table","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Cross Table — crosstableClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::crosstableBase -> crosstableClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Cross Table — crosstableClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::crosstableBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Cross Table — crosstableClass","text":"crosstableClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Cross Table — crosstableClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross Table — crosstableClass","text":"","code":"crosstableClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/crosstableClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross Table — crosstableClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/flowchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Study Flowchart — flowchart","title":"Study Flowchart — flowchart","text":"Study Flowchart","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/flowchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Study Flowchart — flowchart","text":"","code":"flowchart(   data,   title = \"Study Flow Diagram\",   nodes,   counts,   direction = \"tb\",   style = \"simple\",   showCounts = TRUE )"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/flowchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Study Flowchart — flowchart","text":"data data data frame. title . nodes Variables containing node labels/descriptions counts Variables containing counts node direction . style . showCounts .","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/flowchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Study Flowchart — flowchart","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/flowchartClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Study Flowchart — flowchartClass","title":"Study Flowchart — flowchartClass","text":"Study Flowchart Study Flowchart","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/flowchartClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Study Flowchart — flowchartClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::flowchartBase -> flowchartClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/flowchartClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Study Flowchart — flowchartClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::flowchartBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/flowchartClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Study Flowchart — flowchartClass","text":"flowchartClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/flowchartClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Study Flowchart — flowchartClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/flowchartClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Study Flowchart — flowchartClass","text":"","code":"flowchartClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/flowchartClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Study Flowchart — flowchartClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/histopathology.html","id":null,"dir":"Reference","previous_headings":"","what":"histopathology — histopathology","title":"histopathology — histopathology","text":"Fake histopathology research data.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/histopathology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"histopathology — histopathology","text":"","code":"data(histopathology)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/histopathology.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"histopathology — histopathology","text":"data frame","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ihcstats.html","id":null,"dir":"Reference","previous_headings":"","what":"IHC Expression Analysis — ihcstats","title":"IHC Expression Analysis — ihcstats","text":"IHC Expression Analysis","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ihcstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IHC Expression Analysis — ihcstats","text":"","code":"ihcstats(   data,   markers,   computeHScore = TRUE,   clusterMethod = \"hierarchical\",   distanceMetric = \"gower\",   nClusters = 3,   showDendrogram = TRUE,   showHeatmap = TRUE,   showScoreDist = TRUE )"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ihcstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IHC Expression Analysis — ihcstats","text":"data data data frame. markers IHC marker variables categorical expression scores computeHScore . clusterMethod . distanceMetric . nClusters . showDendrogram . showHeatmap . showScoreDist .","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ihcstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IHC Expression Analysis — ihcstats","text":"results object containing: Tables can converted data frames asDF .data.frame. example: results$hscoreTable$asDF .data.frame(results$hscoreTable)","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ihcstatsClass.html","id":null,"dir":"Reference","previous_headings":"","what":"IHC Expression Analysis — ihcstatsClass","title":"IHC Expression Analysis — ihcstatsClass","text":"IHC Expression Analysis IHC Expression Analysis","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ihcstatsClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"IHC Expression Analysis — ihcstatsClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::ihcstatsBase -> ihcstatsClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ihcstatsClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"IHC Expression Analysis — ihcstatsClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::ihcstatsBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ihcstatsClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"IHC Expression Analysis — ihcstatsClass","text":"ihcstatsClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ihcstatsClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"IHC Expression Analysis — ihcstatsClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ihcstatsClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IHC Expression Analysis — ihcstatsClass","text":"","code":"ihcstatsClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/ihcstatsClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IHC Expression Analysis — ihcstatsClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcat.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of Categorical Variables — reportcat","title":"Summary of Categorical Variables — reportcat","text":"Function Generating Summaries Categorical Variables.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of Categorical Variables — reportcat","text":"","code":"reportcat(data, vars)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of Categorical Variables — reportcat","text":"data data data frame vars string naming variables data contains values used report.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of Categorical Variables — reportcat","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of Categorical Variables — reportcat","text":"","code":"# \\donttest{ # example will be added # }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of Categorical Variables — reportcatClass","title":"Summary of Categorical Variables — reportcatClass","text":"Summary Categorical Variables Summary Categorical Variables","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of Categorical Variables — reportcatClass","text":"Text","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Summary of Categorical Variables — reportcatClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::reportcatBase -> reportcatClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Summary of Categorical Variables — reportcatClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::reportcatBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Summary of Categorical Variables — reportcatClass","text":"reportcatClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Summary of Categorical Variables — reportcatClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of Categorical Variables — reportcatClass","text":"","code":"reportcatClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/reportcatClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of Categorical Variables — reportcatClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydata.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of Continuous Variables — summarydata","title":"Summary of Continuous Variables — summarydata","text":"Function Generating Summaries Continuous Variables.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of Continuous Variables — summarydata","text":"","code":"summarydata(data, vars)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of Continuous Variables — summarydata","text":"data data data frame. vars string naming variables data contains continuous values used report","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of Continuous Variables — summarydata","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of Continuous Variables — summarydata","text":"","code":"# \\donttest{ # example will be added # }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of Continuous Variables — summarydataClass","title":"Summary of Continuous Variables — summarydataClass","text":"Summary Continuous Variables Summary Continuous Variables","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of Continuous Variables — summarydataClass","text":"Text","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Summary of Continuous Variables — summarydataClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::summarydataBase -> summarydataClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Summary of Continuous Variables — summarydataClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::summarydataBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Summary of Continuous Variables — summarydataClass","text":"summarydataClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Summary of Continuous Variables — summarydataClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of Continuous Variables — summarydataClass","text":"","code":"summarydataClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/summarydataClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of Continuous Variables — summarydataClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone.html","id":null,"dir":"Reference","previous_headings":"","what":"Table One — tableone","title":"Table One — tableone","text":"Function making Table One.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table One — tableone","text":"","code":"tableone(data, vars, sty = \"t1\", excl = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table One — tableone","text":"data data data frame. vars string naming variables data contains values used Table One. sty string naming style table. excl boolean argument whether exclude missing values. Default false.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table One — tableone","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table One — tableone","text":"","code":"# \\donttest{ # data('histopathology') # dat <- as.data.frame(histopathology) # ClinicoPathDescriptives::tableone( # data = dat, # vars = vars(Sex, PreinvasiveComponent, LVI, PNI, Grade, Age), # sty = \"t3\", # excl = TRUE) # }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Table One — tableoneClass","title":"Table One — tableoneClass","text":"Table One Table One","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table One — tableoneClass","text":"Table","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Table One — tableoneClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::tableoneBase -> tableoneClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Table One — tableoneClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::tableoneBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Table One — tableoneClass","text":"tableoneClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Table One — tableoneClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table One — tableoneClass","text":"","code":"tableoneClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tableoneClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table One — tableoneClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tumor_response_examples.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Tumor Response Datasets — tumor_response_examples","title":"Example Tumor Response Datasets — tumor_response_examples","text":"Example datasets demonstrating different scenarios tumor response analysis","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tumor_response_examples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Tumor Response Datasets — tumor_response_examples","text":"","code":"tumor_response_examples"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tumor_response_examples.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Tumor Response Datasets — tumor_response_examples","text":"list containing 4 data frames: raw_with_time Raw tumor measurements time points (20 obs. 3 variables) percent_with_time Pre-calculated response percentages time (20 obs. 3 variables) percent_no_time Pre-calculated response percentages without time (10 obs. 2 variables)","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tumor_response_examples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example Tumor Response Datasets — tumor_response_examples","text":"dataset represents different scenario: raw_with_time: Longitudinal raw measurements percent_with_time: Longitudinal percentage changes percent_no_time: Single timepoint percentage changes","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/tumor_response_examples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Tumor Response Datasets — tumor_response_examples","text":"","code":"data(tumor_response_examples) head(tumor_response_examples$raw_with_time) #>   PatientID Time Measurement #> 1       PT1    0          50 #> 2       PT1    2          30 #> 3       PT1    4          20 #> 4       PT1    6          10 #> 5       PT2    0          40 #> 6       PT2    2          30 head(tumor_response_examples$percent_no_time) #>   PatientID Response #> 1       PT1      -80 #> 2       PT2      -30 #> 3       PT3       15 #> 4       PT4       35 #> 5       PT5     -100 #> 6       PT6      -45"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartree.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable Tree — vartree","title":"Variable Tree — vartree","text":"Function Generating Tree Summaries Variables.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable Tree — vartree","text":"","code":"vartree(   data,   vars,   percvar,   percvarLevel,   summaryvar,   prunebelow,   pruneLevel1,   pruneLevel2,   follow,   followLevel1,   followLevel2,   excl = FALSE,   vp = TRUE,   horizontal = FALSE,   sline = TRUE,   varnames = FALSE,   nodelabel = TRUE,   pct = FALSE,   showcount = TRUE,   legend = FALSE,   pattern = FALSE,   sequence = FALSE,   ptable = FALSE,   mytitle = \"\",   useprunesmaller = FALSE,   prunesmaller = 5,   summarylocation = \"leafonly\" )"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable Tree — vartree","text":"data data data frame. vars . percvar . percvarLevel . summaryvar . prunebelow . pruneLevel1 . pruneLevel2 . follow . followLevel1 . followLevel2 . excl . vp . horizontal . sline . varnames . nodelabel . pct . showcount . legend . pattern . sequence . ptable . mytitle . useprunesmaller . prunesmaller . summarylocation .","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variable Tree — vartree","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variable Tree — vartree","text":"","code":"# \\donttest{ # example will be added # }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartreeClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable Tree — vartreeClass","title":"Variable Tree — vartreeClass","text":"Variable Tree Variable Tree","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartreeClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Variable Tree — vartreeClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::vartreeBase -> vartreeClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartreeClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Variable Tree — vartreeClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::vartreeBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartreeClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Variable Tree — vartreeClass","text":"vartreeClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartreeClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Variable Tree — vartreeClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartreeClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable Tree — vartreeClass","text":"","code":"vartreeClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vartreeClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable Tree — vartreeClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/venn.html","id":null,"dir":"Reference","previous_headings":"","what":"Venn Diagram — venn","title":"Venn Diagram — venn","text":"Venn Diagram","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/venn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Venn Diagram — venn","text":"","code":"venn(data, var1, var1true, var2, var2true, var3, var3true, var4, var4true)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/venn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Venn Diagram — venn","text":"data data data frame. var1 string naming variable data contains first variable used report var1true string naming level var1 contains true level var2 string naming variable data contains second variable used report var2true string naming level var2 contains true level var3 string naming variable data contains third variable used report var3true string naming level var3 contains true level var4 string naming variable data contains fourth variable used report var4true string naming level var4 contains true level","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/venn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Venn Diagram — venn","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Venn Diagram — vennClass","title":"Venn Diagram — vennClass","text":"Venn Diagram Venn Diagram","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Venn Diagram — vennClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::vennBase -> vennClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Venn Diagram — vennClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::vennBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Venn Diagram — vennClass","text":"vennClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Venn Diagram — vennClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Venn Diagram — vennClass","text":"","code":"vennClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/vennClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Venn Diagram — vennClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfall.html","id":null,"dir":"Reference","previous_headings":"","what":"Treatment Response Analysis — waterfall","title":"Treatment Response Analysis — waterfall","text":"Creates waterfall plot visualize tumor response data following RECIST criteria.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Treatment Response Analysis — waterfall","text":"","code":"waterfall(   data,   patientID,   responseVar,   timeVar,   inputType = \"percentage\",   sortBy = \"response\",   showThresholds = FALSE,   labelOutliers = FALSE,   showMedian = FALSE,   showCI = FALSE,   minResponseForLabel = 50,   colorScheme = \"jamovi\",   barAlpha = 1,   barWidth = 0.7,   showWaterfallPlot = FALSE,   showSpiderPlot = FALSE )"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Treatment Response Analysis — waterfall","text":"data data data frame. patientID Variable containing patient identifiers. responseVar Percentage change tumor size. timeVar Time point measurement spider plot (e.g., months baseline) inputType Specify data format: 'raw' actual measurements (calculate percent change) 'percentage' pre-calculated percentage changes sortBy Sort waterfall plot best response patient ID. showThresholds Show +20 percent -30 percent RECIST thresholds. labelOutliers Label responses exceeding ±50 percent. showMedian Show median response horizontal line. showCI Show confidence interval around median response. minResponseForLabel Minimum response value labels displayed. colorScheme Color scheme waterfall plot. barAlpha Transparency bars waterfall plot. barWidth Width bars waterfall plot. showWaterfallPlot . showSpiderPlot Create additional spider plot showing response time longitudinal data available","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Treatment Response Analysis — waterfall","text":"results object containing: Tables can converted data frames asDF .data.frame. example: results$summaryTable$asDF .data.frame(results$summaryTable)","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Treatment Response Analysis — waterfall","text":"","code":"# \\donttest{ # data <- data.frame( #     PatientID = paste0(\"PT\", 1:10), #     Response = c(-100, -45, -30, -20, -10, 0, 10, 20, 30, 40) # ) # ClinicoPathDescriptives::waterfall( #     data = data, #     patientID = \"PatientID\", #     responseVar = \"Response\" # ) # }"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Treatment Response Analysis — waterfallClass","title":"Treatment Response Analysis — waterfallClass","text":"Creates waterfall spider plots visualize tumor response data following RECIST criteria","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Treatment Response Analysis — waterfallClass","text":"list containing plot object summary statistics","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Treatment Response Analysis — waterfallClass","text":"jmvcore::Analysis -> ClinicoPathDescriptives::waterfallBase -> waterfallClass","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Treatment Response Analysis — waterfallClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() ClinicoPathDescriptives::waterfallBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Treatment Response Analysis — waterfallClass","text":"waterfallClass$clone()","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Treatment Response Analysis — waterfallClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Treatment Response Analysis — waterfallClass","text":"","code":"waterfallClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Treatment Response Analysis — waterfallClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/ClinicoPathDescriptives/reference/waterfallClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Treatment Response Analysis — waterfallClass","text":"","code":"data <- data.frame(   PatientID = paste0(\"PT\", 1:10),   Response = c(-100, -45, -30, -20, -10, 0, 10, 20, 30, 40),   Time = c(1,2,3,4,5,6,7,8,9,10) ) waterfall(data, \"PatientID\", \"Response\", \"Time\") #>  #>  TREATMENT RESPONSE ANALYSIS #>  #>  Response Categories Based on RECIST v1.1 Criteria  #>  ─────────────────────────────────────────────────  #>    Category    Number of Patients    Percentage    #>  ─────────────────────────────────────────────────  #>    CR     ᵃ                     1           10%    #>    PR     ᵇ                     2           20%    #>    SD     ᵈ                     5           50%    #>    PD     ᵉ                     2           20%    #>  ─────────────────────────────────────────────────  #>    ᵃ Complete Response (CR): Complete #>    disappearance of all target lesions. #>    ᵇ Partial Response (PR): At least 30% #>    decrease in sum of target lesions. #>    ᵈ Stable Disease (SD): Neither PR nor PD #>    criteria met. #>    ᵉ Progressive Disease (PD): At least 20% #>    increase in sum of target lesions. #>  #>  #>  Clinical Response Metrics                     #>  ────────────────────────────────────────────  #>    Metric                             Value    #>  ────────────────────────────────────────────  #>    Objective Response Rate (CR+PR)    30%      #>    Disease Control Rate (CR+PR+SD)    80%      #>  ────────────────────────────────────────────  #>  #> $data #> $data$waterfall #> # A tibble: 10 × 5 #>    PatientID Response  Time response category #>    <chr>        <dbl> <dbl>    <dbl> <fct>    #>  1 PT1           -100     1     -100 CR       #>  2 PT2            -45     2      -45 PR       #>  3 PT3            -30     3      -30 PR       #>  4 PT4            -20     4      -20 SD       #>  5 PT5            -10     5      -10 SD       #>  6 PT6              0     6        0 SD       #>  7 PT7             10     7       10 SD       #>  8 PT8             20     8       20 SD       #>  9 PT9             30     9       30 PD       #> 10 PT10            40    10       40 PD       #>  #> $data$spider #>    PatientID Response Time response #> 1        PT1     -100    1     -100 #> 2        PT2      -45    2      -45 #> 3        PT3      -30    3      -30 #> 4        PT4      -20    4      -20 #> 5        PT5      -10    5      -10 #> 6        PT6        0    6        0 #> 7        PT7       10    7       10 #> 8        PT8       20    8       20 #> 9        PT9       30    9       30 #> 10      PT10       40   10       40 #>  #>  #> $data_waterfall #> # A tibble: 10 × 5 #>    PatientID Response  Time response category #>    <chr>        <dbl> <dbl>    <dbl> <fct>    #>  1 PT1           -100     1     -100 CR       #>  2 PT2            -45     2      -45 PR       #>  3 PT3            -30     3      -30 PR       #>  4 PT4            -20     4      -20 SD       #>  5 PT5            -10     5      -10 SD       #>  6 PT6              0     6        0 SD       #>  7 PT7             10     7       10 SD       #>  8 PT8             20     8       20 SD       #>  9 PT9             30     9       30 PD       #> 10 PT10            40    10       40 PD       #>  #> $data_spider #>    PatientID Response Time response #> 1        PT1     -100    1     -100 #> 2        PT2      -45    2      -45 #> 3        PT3      -30    3      -30 #> 4        PT4      -20    4      -20 #> 5        PT5      -10    5      -10 #> 6        PT6        0    6        0 #> 7        PT7       10    7       10 #> 8        PT8       20    8       20 #> 9        PT9       30    9       30 #> 10      PT10       40   10       40 #>  #> $options #> $options$patientID #> [1] \"PatientID\" #>  #> $options$response #> [1] \"Response\" #>  #> $options$timeVar #> [1] \"Time\" #>  #> $options$sortBy #> [1] \"response\" #>  #> $options$showThresholds #> [1] FALSE #>  #> $options$labelOutliers #> [1] FALSE #>  #> $options$colorScheme #> [1] \"jamovi\" #>  #> $options$barWidth #> [1] 0.7 #>  #> $options$barAlpha #> [1] 1 #>  #> $options$showMedian #> [1] FALSE #>  #> $options$showCI #> [1] FALSE #>  #> $options$minResponseForLabel #> [1] 50 #>  #>  #> $metrics #> $metrics$summary #>    category n percent #> CR       CR 1      10 #> PR       PR 2      20 #> SD       SD 5      50 #> PD       PD 2      20 #>  #> $metrics$ORR #> [1] 30 #>  #> $metrics$DCR #> [1] 80 #>"}]
